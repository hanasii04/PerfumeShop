// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PerfumeShop.Models;

#nullable disable

namespace PerfumeShop.Migrations
{
    [DbContext(typeof(PerfumeShopContext))]
    [Migration("20250625145908_hi")]
    partial class hi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PerfumeShop.Models.DiaChi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Id_NguoiDung")
                        .HasColumnType("int");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<string>("TenDiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("DiaChis");
                });

            modelBuilder.Entity("PerfumeShop.Models.GioHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Id_NguoiDung")
                        .HasColumnType("int");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("PerfumeShop.Models.GioHangChiTiet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GioHangChiTietId")
                        .HasColumnType("int");

                    b.Property<int?>("GioHangId")
                        .HasColumnType("int");

                    b.Property<int>("Id_NguoiDung")
                        .HasColumnType("int");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<int?>("SanPhamChiTietId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GioHangChiTietId");

                    b.HasIndex("GioHangId");

                    b.HasIndex("NguoiDungId");

                    b.HasIndex("SanPhamChiTietId");

                    b.ToTable("GioHangChiTiets");
                });

            modelBuilder.Entity("PerfumeShop.Models.HoaDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiaChiId")
                        .HasColumnType("int");

                    b.Property<int>("Id_DiaChi")
                        .HasColumnType("int");

                    b.Property<int?>("Id_MaGiamGia")
                        .HasColumnType("int");

                    b.Property<int>("Id_NguoiDung")
                        .HasColumnType("int");

                    b.Property<int>("Id_PhuongThucThanhToan")
                        .HasColumnType("int");

                    b.Property<int>("Id_PhuongThucVanChuyen")
                        .HasColumnType("int");

                    b.Property<int>("MaGiamGiaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<int>("PhuongThucThanhToanId_PhuongThucThanhToan")
                        .HasColumnType("int");

                    b.Property<int>("PhuongThucVanChuyenId")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiaChiId");

                    b.HasIndex("MaGiamGiaId");

                    b.HasIndex("NguoiDungId");

                    b.HasIndex("PhuongThucThanhToanId_PhuongThucThanhToan");

                    b.HasIndex("PhuongThucVanChuyenId");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("PerfumeShop.Models.HoaDonChiTiet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("HoaDonId")
                        .HasColumnType("int");

                    b.Property<int>("Id_HoaDon")
                        .HasColumnType("int");

                    b.Property<int>("Id_SanPhamChiTiet")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamChiTietId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.HasIndex("SanPhamChiTietId");

                    b.ToTable("HoaDonChiTiets");
                });

            modelBuilder.Entity("PerfumeShop.Models.MaGiamGia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PhanTramGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenMaGiamGia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("TenMaGiamGia")
                        .IsUnique();

                    b.ToTable("MaGiamGias");
                });

            modelBuilder.Entity("PerfumeShop.Models.NguoiDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("NguoiDungs");
                });

            modelBuilder.Entity("PerfumeShop.Models.PhuongThucThanhToan", b =>
                {
                    b.Property<int>("Id_PhuongThucThanhToan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_PhuongThucThanhToan"));

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_PhuongThucThanhToan");

                    b.ToTable("PhuongThucThanhToans");
                });

            modelBuilder.Entity("PerfumeShop.Models.PhuongThucVanChuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("GiaTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PhuongThucVanChuyens");
                });

            modelBuilder.Entity("PerfumeShop.Models.SanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuocGia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ThoiGianLuuHuong")
                        .HasColumnType("int");

                    b.Property<string>("ThuongHieu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("PerfumeShop.Models.SanPhamChiTiet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaNhap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Id_SanPham")
                        .HasColumnType("int");

                    b.Property<int>("Id_TheTich")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("TheTichId_TheTich")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SanPhamId");

                    b.HasIndex("TheTichId_TheTich");

                    b.ToTable("SanPhamChiTiets");
                });

            modelBuilder.Entity("PerfumeShop.Models.TaiKhoan", b =>
                {
                    b.Property<int>("Id_TaiKhoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_TaiKhoan"));

                    b.Property<int>("Id_NguoiDung")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("VaiTro")
                        .HasColumnType("int");

                    b.HasKey("Id_TaiKhoan");

                    b.HasIndex("NguoiDungId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("PerfumeShop.Models.TheTich", b =>
                {
                    b.Property<int>("Id_TheTich")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_TheTich"));

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_TheTich");

                    b.ToTable("TheTichs");
                });

            modelBuilder.Entity("PerfumeShop.Models.DiaChi", b =>
                {
                    b.HasOne("PerfumeShop.Models.NguoiDung", "NguoiDung")
                        .WithMany("DiaChis")
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("PerfumeShop.Models.GioHang", b =>
                {
                    b.HasOne("PerfumeShop.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("PerfumeShop.Models.GioHangChiTiet", b =>
                {
                    b.HasOne("PerfumeShop.Models.GioHangChiTiet", null)
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("GioHangChiTietId");

                    b.HasOne("PerfumeShop.Models.GioHang", null)
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("GioHangId");

                    b.HasOne("PerfumeShop.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PerfumeShop.Models.SanPhamChiTiet", null)
                        .WithMany("GioHangChiTiets")
                        .HasForeignKey("SanPhamChiTietId");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("PerfumeShop.Models.HoaDon", b =>
                {
                    b.HasOne("PerfumeShop.Models.DiaChi", "DiaChi")
                        .WithMany("HoaDons")
                        .HasForeignKey("DiaChiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PerfumeShop.Models.MaGiamGia", "MaGiamGia")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaGiamGiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PerfumeShop.Models.NguoiDung", "NguoiDung")
                        .WithMany("HoaDons")
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PerfumeShop.Models.PhuongThucThanhToan", "PhuongThucThanhToan")
                        .WithMany("HoaDons")
                        .HasForeignKey("PhuongThucThanhToanId_PhuongThucThanhToan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PerfumeShop.Models.PhuongThucVanChuyen", "PhuongThucVanChuyen")
                        .WithMany("HoaDons")
                        .HasForeignKey("PhuongThucVanChuyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaChi");

                    b.Navigation("MaGiamGia");

                    b.Navigation("NguoiDung");

                    b.Navigation("PhuongThucThanhToan");

                    b.Navigation("PhuongThucVanChuyen");
                });

            modelBuilder.Entity("PerfumeShop.Models.HoaDonChiTiet", b =>
                {
                    b.HasOne("PerfumeShop.Models.HoaDon", "HoaDon")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("HoaDonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PerfumeShop.Models.SanPhamChiTiet", "SanPhamChiTiet")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("SanPhamChiTietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("SanPhamChiTiet");
                });

            modelBuilder.Entity("PerfumeShop.Models.SanPhamChiTiet", b =>
                {
                    b.HasOne("PerfumeShop.Models.SanPham", "SanPham")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PerfumeShop.Models.TheTich", "TheTich")
                        .WithMany("SanPhamChiTiets")
                        .HasForeignKey("TheTichId_TheTich")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");

                    b.Navigation("TheTich");
                });

            modelBuilder.Entity("PerfumeShop.Models.TaiKhoan", b =>
                {
                    b.HasOne("PerfumeShop.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("PerfumeShop.Models.DiaChi", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("PerfumeShop.Models.GioHang", b =>
                {
                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("PerfumeShop.Models.GioHangChiTiet", b =>
                {
                    b.Navigation("GioHangChiTiets");
                });

            modelBuilder.Entity("PerfumeShop.Models.HoaDon", b =>
                {
                    b.Navigation("HoaDonChiTiets");
                });

            modelBuilder.Entity("PerfumeShop.Models.MaGiamGia", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("PerfumeShop.Models.NguoiDung", b =>
                {
                    b.Navigation("DiaChis");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("PerfumeShop.Models.PhuongThucThanhToan", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("PerfumeShop.Models.PhuongThucVanChuyen", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("PerfumeShop.Models.SanPham", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });

            modelBuilder.Entity("PerfumeShop.Models.SanPhamChiTiet", b =>
                {
                    b.Navigation("GioHangChiTiets");

                    b.Navigation("HoaDonChiTiets");
                });

            modelBuilder.Entity("PerfumeShop.Models.TheTich", b =>
                {
                    b.Navigation("SanPhamChiTiets");
                });
#pragma warning restore 612, 618
        }
    }
}
